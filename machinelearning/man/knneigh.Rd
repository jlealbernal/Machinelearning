% Generated by roxygen2 (4.1.0.9001): do not edit by hand
% Please edit documentation in R/knneigh.R
\name{knneigh}
\alias{knneigh}
\title{kNN classifier for three  classes in a space of 2 dimensions}
\usage{
knneigh(data, trueClasses = NULL, memory = NULL, k = 1, p = 2,
  type = "train")
}
\arguments{
\item{data}{A data frame or a matrix where rows are observations and columns are features. If \code{type} is "train" this is training dataset, and if it is "predict" it is test dataset.}

\item{trueClasses}{A vector with labels for each row in \code{data}. If \code{type} is "train", and with labels for each row in \code{memory} if \code{type} is "predict".}

\item{memory}{A data frame or a matrix where rows are observations and columns are features. If \code{type} is "train" this argument  is not needed, and if it is "predict" it is a training dataset.}

\item{k}{Number of neighbors that the classifier should use. It has to be an odd number.}

\item{p}{Distance metric the classifieruses: 1, 2 or Inf.}

\item{type}{Whether the goal is to train the classifier or predict classes of new observations based on past ones. The value can be either "train" or "predict".}
}
\value{
A list of predictedClasses, prob, accuracy and errorCount.
}
\description{
kNN classifier for three  classes in a space of 2 dimensions
}
\examples{
nx1<-200; nx3<-200; nx2<-200
class<-classfunction(nx1, nx2, nx3, mux1=c(5,6), mux2=c(1,6), mux3=c(3,4), sdx1=c(1.3,1.3), sdx2=c(0.9,1), sdx3=c(1.2,1), rhox1=-0.72, rhox2=0.3, rhox3=-0.2, name=c("Elephant", "Tiger", "Lion"))
k<-20
Accuracy<-rep(0,k)
for(i in 1:k){ Accuracy[i]<-knneigh(class[,1:2], class[,4], k=i, p=2, type="train")$accuracy}
plot(Accuracy)
}

